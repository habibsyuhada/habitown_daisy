generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres@localhost:5432/freetool"
}

model Habit {
  id          Int           @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  userId      String
  User        User          @relation(fields: [userId], references: [id])
  records     HabitRecord[]
  frequency   String        @default("daily") @db.VarChar(255)
  target      Int           @default(1)
  icon        String?
  color       String?
  archived    Boolean       @default(false)
  startDate   DateTime      @default(now())
  endDate     DateTime?
  category    String?
  priority    Int           @default(0)
}

model HabitRecord {
  id        Int      @id @default(autoincrement())
  date      DateTime @unique
  completed Boolean  @default(false)
  habitId   Int
  habit     Habit    @relation(fields: [habitId], references: [id])
  value     Float?
  notes     String?
  mood      Int?
  difficulty Int?
  skipped   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@index([habitId, date])
}

model Account {
  id                String  @id
  userId            String
  type              String
  provider          String
  providerAccountId String?
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  User              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id            String    @id
  name          String?
  email         String    @unique
  password      String?
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime
  Account       Account[]
  Habit         Habit[]
}

model currency {
  base_code        String    @id @db.VarChar
  conversion_rates String?
  update_date      DateTime? @db.Timestamp(6)
}

model documentinteractive {
  id                           Int                            @id @default(autoincrement())
  name                         String?
  desc                         String?
  userId                       String?
  document_html                String?
  documentinteractive_variable documentinteractive_variable[]
}

model documentinteractive_variable {
  id                  Int                 @id @default(autoincrement())
  documentId          Int
  name                String?             @db.VarChar
  value               String?             @db.VarChar
  documentinteractive documentinteractive @relation(fields: [documentId], references: [id], onDelete: Cascade)

  @@index([documentId])
}

model master_currency {
  code String  @id @db.VarChar
  name String? @db.VarChar
}
